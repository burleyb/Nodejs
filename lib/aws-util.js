"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.date = void 0;
exports.copy = copy;
exports.error = error;
const abort = {};
function update(obj1, obj2) {
    each(obj2, function iterator(key, item) {
        obj1[key] = item;
    });
    return obj1;
}
function each(object, iterFunction) {
    for (var key in object) {
        if (Object.prototype.hasOwnProperty.call(object, key)) {
            var ret = iterFunction.call(this, key, object[key]);
            if (ret === abort)
                break;
        }
    }
}
function copy(object) {
    if (object === null || object === undefined)
        return object;
    var dupe = {};
    for (var key in object) {
        dupe[key] = object[key];
    }
    return dupe;
}
function error(err, options) {
    var originalError = null;
    if (typeof err.message === 'string' && err.message !== '') {
        if (typeof options === 'string' || (options && options.message)) {
            originalError = copy(err);
            if (originalError != null) {
                originalError.message = err.message;
            }
        }
    }
    err.message = err.message || null;
    if (typeof options === 'string') {
        err.message = options;
    }
    else if (typeof options === 'object' && options !== null) {
        update(err, options);
        if (options.message)
            err.message = options.message;
        if (options.code || options.name)
            err.code = options.code || options.name;
        if (options.stack)
            err.stack = options.stack;
    }
    if (typeof Object.defineProperty === 'function') {
        Object.defineProperty(err, 'name', { writable: true, enumerable: false });
        Object.defineProperty(err, 'message', { enumerable: true });
    }
    err.name = String(options && options.name || err.name || err.code || 'Error');
    err.time = new Date();
    if (originalError)
        err.originalError = originalError;
    return err;
}
exports.date = {
    /**
     * @return [Date] the current JavaScript date object. Since all
     *   AWS services rely on this date object, you can override
     *   this function to provide a special time value to AWS service
     *   requests.
     */
    getDate: function getDate() {
        return new Date();
    }
};
exports.default = {
    error,
    date: exports.date
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXdzLXV0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhd3MtdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFpQkEsb0JBT0M7QUFFRCxzQkFtQ0M7QUE3REQsTUFBTSxLQUFLLEdBQUcsRUFBRSxDQUFDO0FBQ2pCLFNBQVMsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJO0lBQ3pCLElBQUksQ0FBQyxJQUFJLEVBQUUsU0FBUyxRQUFRLENBQUMsR0FBRyxFQUFFLElBQUk7UUFDckMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQztJQUNsQixDQUFDLENBQUMsQ0FBQztJQUNILE9BQU8sSUFBSSxDQUFDO0FBQ2IsQ0FBQztBQUVELFNBQVMsSUFBSSxDQUFDLE1BQU0sRUFBRSxZQUFZO0lBQ2pDLEtBQUssSUFBSSxHQUFHLElBQUksTUFBTSxFQUFFLENBQUM7UUFDeEIsSUFBSSxNQUFNLENBQUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUM7WUFDdkQsSUFBSSxHQUFHLEdBQUcsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ3BELElBQUksR0FBRyxLQUFLLEtBQUs7Z0JBQUUsTUFBTTtRQUMxQixDQUFDO0lBQ0YsQ0FBQztBQUNGLENBQUM7QUFFRCxTQUFnQixJQUFJLENBQUMsTUFBTTtJQUMxQixJQUFJLE1BQU0sS0FBSyxJQUFJLElBQUksTUFBTSxLQUFLLFNBQVM7UUFBRSxPQUFPLE1BQU0sQ0FBQztJQUMzRCxJQUFJLElBQUksR0FBRyxFQUFFLENBQUM7SUFDZCxLQUFLLElBQUksR0FBRyxJQUFJLE1BQU0sRUFBRSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDekIsQ0FBQztJQUNELE9BQU8sSUFBSSxDQUFDO0FBQ2IsQ0FBQztBQUVELFNBQWdCLEtBQUssQ0FBQyxHQUFHLEVBQUUsT0FBTztJQUNqQyxJQUFJLGFBQWEsR0FBRyxJQUFJLENBQUM7SUFDekIsSUFBSSxPQUFPLEdBQUcsQ0FBQyxPQUFPLEtBQUssUUFBUSxJQUFJLEdBQUcsQ0FBQyxPQUFPLEtBQUssRUFBRSxFQUFFLENBQUM7UUFDM0QsSUFBSSxPQUFPLE9BQU8sS0FBSyxRQUFRLElBQUksQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7WUFDakUsYUFBYSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUMxQixJQUFJLGFBQWEsSUFBSSxJQUFJLEVBQUUsQ0FBQztnQkFDM0IsYUFBYSxDQUFDLE9BQU8sR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDO1lBQ3JDLENBQUM7UUFDRixDQUFDO0lBQ0YsQ0FBQztJQUNELEdBQUcsQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUM7SUFFbEMsSUFBSSxPQUFPLE9BQU8sS0FBSyxRQUFRLEVBQUUsQ0FBQztRQUNqQyxHQUFHLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUN2QixDQUFDO1NBQU0sSUFBSSxPQUFPLE9BQU8sS0FBSyxRQUFRLElBQUksT0FBTyxLQUFLLElBQUksRUFBRSxDQUFDO1FBQzVELE1BQU0sQ0FBQyxHQUFHLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDckIsSUFBSSxPQUFPLENBQUMsT0FBTztZQUNsQixHQUFHLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUM7UUFDL0IsSUFBSSxPQUFPLENBQUMsSUFBSSxJQUFJLE9BQU8sQ0FBQyxJQUFJO1lBQy9CLEdBQUcsQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQ3pDLElBQUksT0FBTyxDQUFDLEtBQUs7WUFDaEIsR0FBRyxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDO0lBQzVCLENBQUM7SUFFRCxJQUFJLE9BQU8sTUFBTSxDQUFDLGNBQWMsS0FBSyxVQUFVLEVBQUUsQ0FBQztRQUNqRCxNQUFNLENBQUMsY0FBYyxDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBQzFFLE1BQU0sQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLFNBQVMsRUFBRSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQzdELENBQUM7SUFFRCxHQUFHLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLElBQUksSUFBSSxHQUFHLENBQUMsSUFBSSxJQUFJLEdBQUcsQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLENBQUM7SUFDOUUsR0FBRyxDQUFDLElBQUksR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO0lBRXRCLElBQUksYUFBYTtRQUFFLEdBQUcsQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDO0lBRXJELE9BQU8sR0FBRyxDQUFDO0FBQ1osQ0FBQztBQUVZLFFBQUEsSUFBSSxHQUFHO0lBRW5COzs7OztPQUtHO0lBQ0gsT0FBTyxFQUFFLFNBQVMsT0FBTztRQUN4QixPQUFPLElBQUksSUFBSSxFQUFFLENBQUM7SUFDbkIsQ0FBQztDQUNELENBQUM7QUFFRixrQkFBZTtJQUNkLEtBQUs7SUFDTCxJQUFJLEVBQUosWUFBSTtDQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBhYm9ydCA9IHt9O1xuZnVuY3Rpb24gdXBkYXRlKG9iajEsIG9iajIpIHtcblx0ZWFjaChvYmoyLCBmdW5jdGlvbiBpdGVyYXRvcihrZXksIGl0ZW0pIHtcblx0XHRvYmoxW2tleV0gPSBpdGVtO1xuXHR9KTtcblx0cmV0dXJuIG9iajE7XG59XG5cbmZ1bmN0aW9uIGVhY2gob2JqZWN0LCBpdGVyRnVuY3Rpb24pIHtcblx0Zm9yICh2YXIga2V5IGluIG9iamVjdCkge1xuXHRcdGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBrZXkpKSB7XG5cdFx0XHR2YXIgcmV0ID0gaXRlckZ1bmN0aW9uLmNhbGwodGhpcywga2V5LCBvYmplY3Rba2V5XSk7XG5cdFx0XHRpZiAocmV0ID09PSBhYm9ydCkgYnJlYWs7XG5cdFx0fVxuXHR9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb3B5KG9iamVjdCkge1xuXHRpZiAob2JqZWN0ID09PSBudWxsIHx8IG9iamVjdCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gb2JqZWN0O1xuXHR2YXIgZHVwZSA9IHt9O1xuXHRmb3IgKHZhciBrZXkgaW4gb2JqZWN0KSB7XG5cdFx0ZHVwZVtrZXldID0gb2JqZWN0W2tleV07XG5cdH1cblx0cmV0dXJuIGR1cGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlcnJvcihlcnIsIG9wdGlvbnMpIHtcblx0dmFyIG9yaWdpbmFsRXJyb3IgPSBudWxsO1xuXHRpZiAodHlwZW9mIGVyci5tZXNzYWdlID09PSAnc3RyaW5nJyAmJiBlcnIubWVzc2FnZSAhPT0gJycpIHtcblx0XHRpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdzdHJpbmcnIHx8IChvcHRpb25zICYmIG9wdGlvbnMubWVzc2FnZSkpIHtcblx0XHRcdG9yaWdpbmFsRXJyb3IgPSBjb3B5KGVycik7XG5cdFx0XHRpZiAob3JpZ2luYWxFcnJvciAhPSBudWxsKSB7XG5cdFx0XHRcdG9yaWdpbmFsRXJyb3IubWVzc2FnZSA9IGVyci5tZXNzYWdlO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXHRlcnIubWVzc2FnZSA9IGVyci5tZXNzYWdlIHx8IG51bGw7XG5cblx0aWYgKHR5cGVvZiBvcHRpb25zID09PSAnc3RyaW5nJykge1xuXHRcdGVyci5tZXNzYWdlID0gb3B0aW9ucztcblx0fSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ29iamVjdCcgJiYgb3B0aW9ucyAhPT0gbnVsbCkge1xuXHRcdHVwZGF0ZShlcnIsIG9wdGlvbnMpO1xuXHRcdGlmIChvcHRpb25zLm1lc3NhZ2UpXG5cdFx0XHRlcnIubWVzc2FnZSA9IG9wdGlvbnMubWVzc2FnZTtcblx0XHRpZiAob3B0aW9ucy5jb2RlIHx8IG9wdGlvbnMubmFtZSlcblx0XHRcdGVyci5jb2RlID0gb3B0aW9ucy5jb2RlIHx8IG9wdGlvbnMubmFtZTtcblx0XHRpZiAob3B0aW9ucy5zdGFjaylcblx0XHRcdGVyci5zdGFjayA9IG9wdGlvbnMuc3RhY2s7XG5cdH1cblxuXHRpZiAodHlwZW9mIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlcnIsICduYW1lJywgeyB3cml0YWJsZTogdHJ1ZSwgZW51bWVyYWJsZTogZmFsc2UgfSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGVyciwgJ21lc3NhZ2UnLCB7IGVudW1lcmFibGU6IHRydWUgfSk7XG5cdH1cblxuXHRlcnIubmFtZSA9IFN0cmluZyhvcHRpb25zICYmIG9wdGlvbnMubmFtZSB8fCBlcnIubmFtZSB8fCBlcnIuY29kZSB8fCAnRXJyb3InKTtcblx0ZXJyLnRpbWUgPSBuZXcgRGF0ZSgpO1xuXG5cdGlmIChvcmlnaW5hbEVycm9yKSBlcnIub3JpZ2luYWxFcnJvciA9IG9yaWdpbmFsRXJyb3I7XG5cblx0cmV0dXJuIGVycjtcbn1cblxuZXhwb3J0IGNvbnN0IGRhdGUgPSB7XG5cblx0LyoqXG5cdCAqIEByZXR1cm4gW0RhdGVdIHRoZSBjdXJyZW50IEphdmFTY3JpcHQgZGF0ZSBvYmplY3QuIFNpbmNlIGFsbFxuXHQgKiAgIEFXUyBzZXJ2aWNlcyByZWx5IG9uIHRoaXMgZGF0ZSBvYmplY3QsIHlvdSBjYW4gb3ZlcnJpZGVcblx0ICogICB0aGlzIGZ1bmN0aW9uIHRvIHByb3ZpZGUgYSBzcGVjaWFsIHRpbWUgdmFsdWUgdG8gQVdTIHNlcnZpY2Vcblx0ICogICByZXF1ZXN0cy5cblx0ICovXG5cdGdldERhdGU6IGZ1bmN0aW9uIGdldERhdGUoKSB7XG5cdFx0cmV0dXJuIG5ldyBEYXRlKCk7XG5cdH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IHtcblx0ZXJyb3IsXG5cdGRhdGVcbn07XG4iXX0=